@page "/settings"
@using System.IO;

<h1>Settings</h1>

<EditForm Model=@new()>
<label for="v1">V2 Token</label>
<input @bind="@v2" type="password" id="v2">
<InputSelect @bind-Value="@v1type" >
	@foreach (var v in Enum.GetValues(typeof(V1APITokenType)))
	{
		<option value="@v">@v</option>
	}
</InputSelect>
<br>
<button @onclick="@UpdateV2">Update</button>
<br>

<label for="v1">V1 Token</label>
<input @bind="@v1" type="password" id="v1">
<InputSelect @bind-Value="@v2type" >
	@foreach (var v in Enum.GetValues(typeof(V2APITokenType)))
	{
		<option value="@v">@v</option>
	}
</InputSelect>
<br>
<button @onclick="@UpdateV1">Update</button>
<br>

<input id="v1game" type="checkbox" @bind=@RashClient.Config.PreferV1GetGames>
<label for="v1game">Prefer GetGamesV1 (for large libraries)</label>

<br>
<button @onclick="@Save">Save</button>
</EditForm>

<h1>ADB Devices</h1>
@foreach (var dev in devs)
{
	<h3>
		@if(UserReadableNames.ContainsKey(dev.Serial))
			@UserReadableNames[dev.Serial]
		else
			@dev.Serial
	</h3>
}

@code {
	List<ADBDevice> devs = new();
	Dictionary<string,string> UserReadableNames = new();
	ADB adb = new();
	protected override async Task OnInitializedAsync()
	{
		await foreach (var d in adb.GetDevices())
		{
			devs.Add(d);
			var p = d.Shell("getprop ro.product.model");
			p.Start();
			// Do it on a different thread?
			UserReadableNames[d.Serial] = await p.StandardOutput.ReadLineAsync() ?? d.Serial;
		}
	}

	string v2;
	string v1;
	V2APITokenType v2type;
	V1APITokenType v1type;
	void UpdateV2()
	{
		RashClient.Itch.V2APIKey = v2;
		RashClient.Itch.V2APITokenType = v2type;
		v2 = null;
		Save();
	}

	void UpdateV1()
	{
		RashClient.Itch.V1APIKey = v1;
		RashClient.Itch.V1APITokenType = v1type;
		v1 = null;
		Save();
	}

	void Save()
	{
		RashClient.Config.Save();
	}
}